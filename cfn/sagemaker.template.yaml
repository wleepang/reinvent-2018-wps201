---
Description: >-
  Creates a SageMaker Notebook instance for the genomic clustering with SageMaker demo

Parameters:

  NotebookInstanceType:
    Type: "String"
    Default: ml.t2.medium
    AllowedValues:
      - ml.t2.medium
      - ml.t2.large
      - ml.t2.xlarge
      - ml.t2.2xlarge
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.p2.xlarge
      - ml.p3.2xlarge
    Description: SageMaker notebook instance type. Defaults to ml.t2.medium.
  
  S3Bucket:
    Type: String
  
  SageMakerExecutionRoleArn:
    Type: String
  
  BatchJobQueueArn:
    Type: String

Resources:
  NotebookLifecycleConfig:
    Type: "AWS::SageMaker::NotebookInstanceLifecycleConfig"
    Properties:
      OnCreate:
        - Content:
            Fn::Base64: 
              Fn::Sub: |
                #!/bin/bash
                set -e
                sudo -i -u ec2-user bash << EOF
                echo "Setup the Workshop exercises"
                
                git clone https://github.com/wleepang/reinvent-2018-wps201.git ~/SageMaker/${AWS::StackName}/
                
                cd ~/SageMaker/${AWS::StackName}
                find -name '*.ipynb' -exec sed -i 's/<<SageMakerS3Bucket>>/${S3Bucket}/g' {} +

                find -name '*.py' -exec sed -i 's/<<SageMakerS3Bucket>>/${S3Bucket}/g' {} +
                find -name '*.py' -exec sed -i 's|<<BatchJobQueueArn>>|${BatchJobQueueArn}|g' {} +

                mv ./ipynb/* .
                mv ./src/submit_jobs.py .

                rm .gitignore
                rm -rf ./cfn
                rm -rf ./src
                rmdir ./ipynb
                
                EOF
      OnStart:
        - Content:
            Fn::Base64: 
              Fn::Sub: |
                #!/bin/bash
                set -e

                echo "Creating custom conda environment"
                cat > /home/ec2-user/${AWS::StackName}-setup.sh << EOF
                #!/bin/bash
                set -e
                cd /home/ec2-user/SageMaker/${AWS::StackName}
                echo "Updating base conda environment"
                conda update -n base conda -y

                echo "Installing extra dependencies"
                conda env update -f environment.yaml
                
                echo "Finished OnStart script"
                EOF

                chown ec2-user:ec2-user /home/ec2-user/${AWS::StackName}-setup.sh
                chmod 755 /home/ec2-user/${AWS::StackName}-setup.sh

                sudo -i -u ec2-user bash << EOF
                echo "Creating ${AWS::StackName} conda env in background process."
                nohup /home/ec2-user/${AWS::StackName}-setup.sh &
                EOF

  SageMakerNotebookInstance:
    Type: "AWS::SageMaker::NotebookInstance"
    Properties:
      NotebookInstanceName: !Sub ${AWS::StackName}-SessionInstance
      InstanceType: !Ref NotebookInstanceType
      RoleArn: !Ref SageMakerExecutionRoleArn
      LifecycleConfigName: !GetAtt NotebookLifecycleConfig.NotebookInstanceLifecycleConfigName

Outputs:
  SageMakerNotebookInstance:
    Value: !GetAtt SageMakerNotebookInstance.NotebookInstanceName
